# .github/workflows/android-ci.yml
name: Android CI

on:
  push:
    branches: [ main, develop, release/** ]
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Detect where src/ is
      - name: Detect app dir
        id: appdir
        run: |
          if [ -d src ]; then echo "APP_DIR=." >> $GITHUB_ENV;
          elif [ -d procrastinaide/src ]; then echo "APP_DIR=procrastinaide" >> $GITHUB_ENV;
          else echo "No app dir with src/ found"; ls -la; exit 1; fi
          echo "App dir is $APP_DIR"

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps & build web
        working-directory: ${{ env.APP_DIR }}
        run: |
          npm ci
          npm run build
          npx cap sync android

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Restore Android caches
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Decode keystore
        working-directory: ${{ env.APP_DIR }}/android
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > release.keystore

      - name: Set signing props
        working-directory: ${{ env.APP_DIR }}/android
        run: |
          cat <<EOF >> gradle.properties
          MYAPP_UPLOAD_STORE_FILE=release.keystore
          MYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          MYAPP_UPLOAD_KEY_ALIAS=${{ secrets.ANDROID_KEY_ALIAS }}
          MYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}
          EOF

      - name: Build AAB
        working-directory: ${{ env.APP_DIR }}/android
        run: ./gradlew bundleRelease

      - name: Export paths
        id: paths
        run: |
          echo "AAB=$(find ${{ env.APP_DIR }}/android/app/build/outputs/bundle/release -name '*.aab' | head -n1)" >> $GITHUB_OUTPUT

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
